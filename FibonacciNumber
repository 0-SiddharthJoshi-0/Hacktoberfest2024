Leetcode Problem- 509. Fibonacci Number
Dynamic Programming
Recursion
Memonization
https://leetcode.com/problems/fibonacci-number/


class Solution {
    
    public int fib(int n) {
        if(n==0){
            return 0;
        }
        int a[]=new int [n+1];
        Arrays.fill(a,-1);
        a[0]=0;
        a[1]=1;
        int x=traversal(a,n);
        //System.out.println()
        return x;
    }
    public int traversal(int[] a,int n){
        if(a[n]==-1){
            a[n]=traversal(a,n-1)+traversal(a,n-2);
        }
        return a[n];
    }
}

Second approach:

Dynamic Programming without recursion

class Solution {
    public int fib(int n) {
        int a[] = new int [31];
        a[0] = 0;
        a[1] = 1;
        for(int i = 2; i <= n; i++)
            a[i] = a[i-1] + a[i-2];
        return a[n];
    }
}
